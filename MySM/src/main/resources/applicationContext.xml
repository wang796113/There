<?xml version="1.0" encoding="UTF-8"?>
<!--
  dtd: xxx.dtd     document type definition
  xsd: xxx.xsd     xml  schema definition
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:property-placeholder location="classpath:db.properties"/>
    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--基本配置-->
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="${jdbc.init}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>

        <!-- 配置获取连接等待超时的时间 ms-->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
    </bean>
    <bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置会话工厂SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--会话工厂中使用的数据源-->
        <property name="dataSource" ref="dataSource"></property>
        <!--包扫描mapper所在包-->
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/*.xml</value>
            </list>
        </property>
    </bean>
    <!--配置会话SqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置会话使用的会话工厂-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--配置mapper包所在位置-->
        <property name="basePackage" value="com.qf.mapper"></property>
    </bean>
    <bean id="txManger" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <tx:advice id="tx" transaction-manager="txManger">
        <tx:attributes>
            <tx:method name="show*" propagation="SUPPORTS"/>
            <tx:method name="query*" propagation="SUPPORTS"/>
            <tx:method name="select" propagation="SUPPORTS"/>

            <tx:method name="add*" rollback-for="Exception"/>
            <tx:method name="insert" rollback-for="Exception"/>
            <tx:method name="remove" rollback-for="Exception"/>

        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="serviceTx" expression="execution(* com.qf.service.*.*(..))"/>

        <aop:advisor advice-ref="tx" pointcut-ref="serviceTx"></aop:advisor>
    </aop:config>
    <!--配置userMapper实例化, 注入到UserService中-->
<!--    <bean id="userService" class="com.qf.service.userServiceImpl">-->
<!--        &lt;!&ndash;sqSession会话会扫描mapper所在包, 将这个包下的所有接口进行实例化-->
<!--            实例化后的bean的id就是接口名字, 首字母小写-->
<!--        &ndash;&gt;-->
<!--        <property name="userMapper" ref="userMapper"></property>-->
<!--    </bean>-->
    <context:component-scan base-package="com.qf"></context:component-scan>
</beans>